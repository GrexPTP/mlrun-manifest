---
# Source: mlrun-ce/templates/jupyter-notebook/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlrun-jupyter
  labels:
    helm.sh/chart: mlrun-ce-0.6.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mlrun-ce
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: "jupyter-notebook"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mlrun-ce
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: "jupyter-notebook"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mlrun-ce
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: "jupyter-notebook"
    spec:      
      securityContext:
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
      initContainers:
      - name: init-chown-data
        # jupyter default NB user: uid=1000(jovyan) gid=100(users) groups=100(users)
        command: ["chown", "-R", "1000:100", "/home/jovyan/data"]
        image: busybox:1.35
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /home/jovyan/data
          name: notebooks
      containers:
      - name: jupyter-notebook
        image: "quay.io/mlrun/jupyter:1.4.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: MLRUN_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: JUPYTER_ENABLE_LAB
          value: "yes"
        - name: MLRUN_DBPATH
          value: http://mlrun-api:8080
        - name: MLRUN_UI_URL
          value: http://localhost:30060/mlrun
        - name: MLRUN_MPIJOB_CRD_VERSION
          value: v1
        - name: MLRUN_PVC_MOUNT
          value: mlrun-jupyter:/home/jovyan/data          
        - name: CHOWN_HOME
          value: "yes"
        - name: CHOWN_HOME_OPTS
          value: "-R"
        
        - name: MLRUN_ARTIFACT_PATH
          value: s3://mlrun/projects/{{run.project}}/artifacts
        - name: MLRUN_FEATURE_STORE__DATA_PREFIXES__DEFAULT
          value: s3://mlrun/projects/{project}/FeatureStore/{name}/{kind}
        - name: MLRUN_FEATURE_STORE__DATA_PREFIXES__NOSQL
          value: ""
        - name: MLRUN_FEATURE_STORE__DEFAULT_TARGETS
          value: parquet
        - name: S3_ENDPOINT_URL
          value: http://minio.mlrun.svc.cluster.local:9000
        - name: AWS_SECRET_ACCESS_KEY
          value: minio123
        - name: AWS_ACCESS_KEY_ID
          value: minio
        volumeMounts:
        - mountPath: /home/jovyan/data
          name: notebooks
        ports:
        - containerPort: 8888
          name: http
        command: [ "start-notebook.sh" ]
        args:
        - --ip="0.0.0.0"
        - --port=8888
        - --NotebookApp.token=''
        - --NotebookApp.password=''
        - --NotebookApp.default_url="/lab"
      volumes:
      - name: notebooks
        persistentVolumeClaim:
          claimName: mlrun-jupyter
